apiVersion: apps/v1
kind: Deployment
metadata:
  name: crd-controller
  namespace: default
  labels:
    app: foo
spec:
  replicas: 1
  selector:
      matchLabels:
        app: foo
  template:
    metadata:
      labels:
        app: foo
    spec:
      containers:
        - name: crd-controller
          image: localhost:5000/crd-controller:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: crd-controller
  namespace: default
  labels:
    app: foo
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: foo
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name:  system:default:crd-controller-roles
rules:
- apiGroups: ["", "niclasgeiger.com"]
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: foo
  name: crd-controller
  namespace: default
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: crd-controller-roles
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: system:default:crd-controller-roles
  apiGroup: "rbac.authorization.k8s.io"